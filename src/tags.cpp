/*****************************************************************************
 *
 * This file is part of Mapnik (c++ mapping toolkit)
 *
 * Copyright (C) 2012 Artem Pavlenko
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 *
 *****************************************************************************/

#include "tags.hpp"

// boost
#include <boost/assign/list_of.hpp>
#include <boost/bimap.hpp>

namespace  mapnik { namespace tags {

typedef boost::bimap<tag_type, name_type> tag_lookup_type;
typedef boost::bimap<tag_type, std::pair<std::string,std::string> > tag_value_lookup_type;

static const tag_lookup_type tag_lookup = boost::assign::list_of<tag_lookup_type::relation>
    (0,"access")
    (1,"addr:housename")
    (2,"addr:housenumber")
    (3,"addr:interpolation")
    (4,"admin_level")
    (5,"aerialway")
    (6,"aeroway")
    (7 ,"amenity")
    (8 ,"area")
    (9 ,"barrier")
    (10 ,"bicycle")
    (11 ,"brand")
    (12 ,"bridge")
    (13 ,"boundary")
    (14 ,"building")
    (15 ,"construction")
    (16 ,"covered")
    (17 ,"culvert")
    (18 ,"cutting")
    (19 ,"denomination")
    (20 ,"disused")
    (21 ,"embankment")
    (22 ,"foot")
    (23 ,"generator:source")
    (24 ,"harbour")
    (25 ,"highway")
    (26 ,"historic")
    (27 ,"horse")
    (28 ,"intermittent")
    (29 ,"junction")
    (30 ,"landuse")
    (31 ,"layer")
    (32 ,"leisure")
    (33 ,"lock")
    (34 ,"man_made")
    (35 ,"military")
    (36 ,"motorcar")
    (37 ,"name")
    (38 ,"natural")
    (39 ,"oneway")
    (40 ,"operator")
    (41 ,"population")
    (42 ,"power")
    (43 ,"power_source")
    (44 ,"place")
    (45 ,"railway")
    (46 ,"ref")
    (47 ,"religion")
    (48 ,"route")
    (49 ,"service")
    (50 ,"shop")
    (51 ,"sport")
    (52 ,"surface")
    (53 ,"toll")
    (54 ,"tourism")
    (55 ,"tower:type")
    (56 ,"tracktype")
    (57 ,"tunnel")
    (58 ,"water")
    (59 ,"waterway")
    (60 ,"wetland")
    (61 ,"width")
    (62 ,"wood")
    ;

static const tag_value_lookup_type tag_value_lookup = boost::assign::list_of<tag_value_lookup_type::relation>
    (0,std::make_pair("building","yes"))
    (1,std::make_pair("highway","residential"))
    (2,std::make_pair("highway","service"))
    (3,std::make_pair("waterway","stream"))
    (4,std::make_pair("highway","unclassified"))
    (5,std::make_pair("highway","track"))
    (6,std::make_pair("oneway","yes"))
    (7,std::make_pair("natural","water"))
    (8,std::make_pair("highway","footway"))
    (9,std::make_pair("access","private"))
    (10,std::make_pair("highway","tertiary"))
    (11,std::make_pair("highway","path"))
    (12,std::make_pair("highway","secondary"))
    (13,std::make_pair("landuse","forest"))
    (14,std::make_pair("bridge","yes"))
    (15,std::make_pair("natural","tree"))
    (16,std::make_pair("surface","paved"))
    (17,std::make_pair("natural","wood"))
    (18,std::make_pair("highway","primary"))
    (19,std::make_pair("landuse","grass"))
    (20,std::make_pair("landuse","residential"))
    (21,std::make_pair("surface","unpaved"))
    (22,std::make_pair("highway","bus_stop"))
    (23,std::make_pair("surface","asphalt"))
    (24,std::make_pair("bicycle","yes"))
    (25,std::make_pair("amenity","parking"))
    (26,std::make_pair("place","locality"))
    (27,std::make_pair("railway","rail"))
    (28,std::make_pair("service","parking_aisle"))
    (29,std::make_pair("boundary","administrative"))
    (30,std::make_pair("building","house"))
    (31,std::make_pair("place","village"))
    (32,std::make_pair("natural","coastline"))
    (33,std::make_pair("tracktype","grade2"))
    (34,std::make_pair("oneway","no"))
    (35,std::make_pair("service","driveway"))
    (36,std::make_pair("highway","turning_circle"))
    (37,std::make_pair("place","hamlet"))
    (38,std::make_pair("natural","wetland"))
    (39,std::make_pair("tracktype","grade3"))
    (40,std::make_pair("waterway","river"))
    (41,std::make_pair("highway","cycleway"))
    (42,std::make_pair("barrier","fence"))
    (43,std::make_pair("building","residential"))
    (44,std::make_pair("amenity","school"))
    (45,std::make_pair("highway","crossing"))
    (46,std::make_pair("admin_level","8"))
    (47,std::make_pair("highway","trunk"))
    (48,std::make_pair("amenity","place_of_worship"))
    (49,std::make_pair("landuse","farmland"))
    (50,std::make_pair("tracktype","grade1"))
    (51,std::make_pair("highway","road"))
    (52,std::make_pair("landuse","farm"))
    (53,std::make_pair("surface","gravel"))
    (54,std::make_pair("landuse","meadow"))
    (55,std::make_pair("highway","motorway"))
    (56,std::make_pair("highway","traffic_signals"))
    (57,std::make_pair("building","hut"))
    (58,std::make_pair("highway","motorway_link"))
    (59,std::make_pair("tracktype","grade4"))
    (60,std::make_pair("barrier","gate"))
    (61,std::make_pair("highway","living_street"))
    (62,std::make_pair("bicycle","no"))
    (63,std::make_pair("leisure","pitch"))
    (64,std::make_pair("tunnel","yes"))
    (65,std::make_pair("surface","ground"))
    (66,std::make_pair("highway","steps"))
    (67,std::make_pair("natural","land"))
    (68,std::make_pair("man_made","survey_point"))
    (69,std::make_pair("tracktype","grade5"))
    (70,std::make_pair("waterway","ditch"))
    (71,std::make_pair("leisure","park"))
    (72,std::make_pair("amenity","restaurant"))
    (73,std::make_pair("barrier","wall"))
    (74,std::make_pair("waterway","riverbank"))
    (75,std::make_pair("amenity","bench"))
    (76,std::make_pair("building","garage"))
    (77,std::make_pair("natural","scrub"))
    (78,std::make_pair("highway","pedestrian"))
    (79,std::make_pair("natural","peak"))
    (80,std::make_pair("building","entrance"))
    (81,std::make_pair("landuse","reservoir"))
    (82,std::make_pair("access","yes"))
    (83,std::make_pair("bicycle","designated"))
    (84,std::make_pair("leisure","swimming_pool"))
    (85,std::make_pair("landuse","farmyard"))
    (86,std::make_pair("railway","level_crossing"))
    (87,std::make_pair("building","apartments"))
    (88,std::make_pair("surface","grass"))
    (89,std::make_pair("wheelchair","yes"))
    (90,std::make_pair("service","alley"))
    (91,std::make_pair("landuse","industrial"))
    (92,std::make_pair("amenity","fuel"))
    (93,std::make_pair("surface","dirt"))
    (94,std::make_pair("highway","trunk_link"))
    (95,std::make_pair("waterway","drain"))
    (96,std::make_pair("barrier","hedge"))
    (97,std::make_pair("amenity","grave_yard"))
    (98,std::make_pair("tourism","information"))
    (99,std::make_pair("shop","supermarket"))
    (100,std::make_pair("highway","primary_link"))
    (101,std::make_pair("wood","deciduous"))
    (102,std::make_pair("leisure","playground"))
    (103,std::make_pair("building","roof"))
    (104,std::make_pair("building","industrial"))
    (105,std::make_pair("amenity","post_box"))
    (106,std::make_pair("waterway","canal"))
    (107,std::make_pair("barrier","bollard"))
    (108,std::make_pair("leisure","garden"))
    (109,std::make_pair("wood","mixed"))
    (110,std::make_pair("landuse","cemetery"))
    (111,std::make_pair("landuse","orchard"))
    (112,std::make_pair("shop","convenience"))
    (113,std::make_pair("access","permissive"))
    (114,std::make_pair("surface","concrete"))
    (115,std::make_pair("surface","paving_stones"))
    (116,std::make_pair("service","spur"))
    (117,std::make_pair("building","garages"))
    (118,std::make_pair("amenity","bank"))
    (119,std::make_pair("tourism","hotel"))
    (120,std::make_pair("access","no"))
    (121,std::make_pair("amenity","fast_food"))
    (122,std::make_pair("man_made","pier"))
    (123,std::make_pair("amenity","kindergarten"))
    (124,std::make_pair("access","agricultural"))
    (125,std::make_pair("surface","cobblestone"))
    (126,std::make_pair("wheelchair","no"))
    (127,std::make_pair("amenity","cafe"))
    (128,std::make_pair("amenity","hospital"))
    (129,std::make_pair("amenity","post_office"))
    (130,std::make_pair("amenity","public_building"))
    (131,std::make_pair("amenity","recycling"))
    (132,std::make_pair("highway","street_lamp"))
    (133,std::make_pair("man_made","tower"))
    (134,std::make_pair("waterway","dam"))
    (135,std::make_pair("amenity","pub"))
    (136,std::make_pair("wood","coniferous"))
    (137,std::make_pair("access","destination"))
    (138,std::make_pair("admin_level","6"))
    (139,std::make_pair("landuse","commercial"))
    (140,std::make_pair("amenity","pharmacy"))
    (141,std::make_pair("railway","abandoned"))
    (142,std::make_pair("service","yard"))
    (143,std::make_pair("place","island"))
    (144,std::make_pair("oneway","_1"))
    (145,std::make_pair("landuse","quarry"))
    (146,std::make_pair("landuse","vineyard"))
    (147,std::make_pair("highway","motorway_junction"))
    (148,std::make_pair("railway","station"))
    (149,std::make_pair("landuse","allotments"))
    (150,std::make_pair("barrier","lift_gate"))
    (151,std::make_pair("admin_level","10"))
    (152,std::make_pair("amenity","telephone"))
    (153,std::make_pair("place","town"))
    (154,std::make_pair("man_made","cutline"))
    (155,std::make_pair("place","suburb"))
    (156,std::make_pair("aeroway","taxiway"))
    (157,std::make_pair("wheelchair","limited"))
    (158,std::make_pair("highway","secondary_link"))
    (159,std::make_pair("leisure","sports_centre"))
    (160,std::make_pair("amenity","bicycle_parking"))
    (161,std::make_pair("surface","sand"))
    (162,std::make_pair("highway","stop"))
    (163,std::make_pair("man_made","works"))
    (164,std::make_pair("landuse","retail"))
    (165,std::make_pair("amenity","fire_station"))
    (166,std::make_pair("service","siding"))
    (167,std::make_pair("amenity","toilets"))
    (168,std::make_pair("bench","yes"))
    (169,std::make_pair("oneway","1"))
    (170,std::make_pair("surface","compacted"))
    (171,std::make_pair("landuse","basin"))
    (172,std::make_pair("amenity","police"))
    (173,std::make_pair("railway","tram"))
    (174,std::make_pair("route","road"))
    (175,std::make_pair("natural","cliff"))
    (176,std::make_pair("highway","construction"))
    (177,std::make_pair("aeroway","aerodrome"))
    (178,std::make_pair("entrance","yes"))
    (179,std::make_pair("man_made","storage_tank"))
    (180,std::make_pair("amenity","atm"))
    (181,std::make_pair("tourism","attraction"))
    (182,std::make_pair("route","bus"))
    (183,std::make_pair("shop","bakery"))
    (184,std::make_pair("tourism","viewpoint"))
    (185,std::make_pair("amenity","swimming_pool"))
    (186,std::make_pair("natural","beach"))
    (187,std::make_pair("tourism","picnic_site"))
    (188,std::make_pair("oneway","true"))
    (189,std::make_pair("highway","bridleway"))
    (190,std::make_pair("tourism","camp_site"))
    (191,std::make_pair("abutters","residential"))
    (192,std::make_pair("leisure","nature_reserve"))
    (193,std::make_pair("amenity","drinking_water"))
    (194,std::make_pair("shop","clothes"))
    (195,std::make_pair("natural","heath"))
    (196,std::make_pair("highway","mini_roundabout"))
    (197,std::make_pair("landuse","construction"))
    (198,std::make_pair("amenity","waste_basket"))
    (199,std::make_pair("railway","platform"))
    (200,std::make_pair("amenity","townhall"))
    (201,std::make_pair("shop","hairdresser"))
    (202,std::make_pair("amenity","shelter"))
    (203,std::make_pair("admin_level","9"))
    (204,std::make_pair("building","farm_auxiliary"))
    (205,std::make_pair("amenity","library"))
    (206,std::make_pair("building","detached"))
    (207,std::make_pair("admin_level","4"))
    (208,std::make_pair("landuse","village_green"))
    (209,std::make_pair("barrier","stile"))
    (210,std::make_pair("landuse","garages"))
    (211,std::make_pair("amenity","bar"))
    (212,std::make_pair("railway","buffer_stop"))
    (213,std::make_pair("wetland","marsh"))
    (214,std::make_pair("tourism","museum"))
    (215,std::make_pair("barrier","cycle_barrier"))
    (216,std::make_pair("route","bicycle"))
    (217,std::make_pair("railway","tram_stop"))
    (218,std::make_pair("amenity","parking_space"))
    (219,std::make_pair("barrier","retaining_wall"))
    (220,std::make_pair("landuse","recreation_ground"))
    (221,std::make_pair("amenity","university"))
    (222,std::make_pair("highway","tertiary_link"))
    (223,std::make_pair("building","terrace"))
    (224,std::make_pair("shop","car_repair"))
    (225,std::make_pair("amenity","hunting_stand"))
    (226,std::make_pair("amenity","fountain"))
    (227,std::make_pair("man_made","pipeline"))
    (228,std::make_pair("wetland","swamp"))
    (229,std::make_pair("shop","car"))
    (230,std::make_pair("bench","no"))
    (231,std::make_pair("tunnel","culvert"))
    (232,std::make_pair("building","school"))
    (233,std::make_pair("barrier","entrance"))
    (234,std::make_pair("railway","disused"))
    (235,std::make_pair("railway","crossing"))
    (236,std::make_pair("building","church"))
    (237,std::make_pair("amenity","social_facility"))
    (238,std::make_pair("natural","bay"))
    (239,std::make_pair("shop","kiosk"))
    (240,std::make_pair("amenity","vending_machine"))
    (241,std::make_pair("route","hiking"))
    (242,std::make_pair("natural","spring"))
    (243,std::make_pair("leisure","common"))
    (244,std::make_pair("railway","switch"))
    (245,std::make_pair("waterway","rapids"))
    (246,std::make_pair("admin_level","7"))
    (247,std::make_pair("leisure","stadium"))
    (248,std::make_pair("leisure","track"))
    (249,std::make_pair("place","isolated_dwelling"))
    (250,std::make_pair("place","islet"))
    (251,std::make_pair("waterway","weir"))
    (252,std::make_pair("amenity","doctors"))
    (253,std::make_pair("access","designated"))
    (254,std::make_pair("landuse","conservation"))
    (255,std::make_pair("waterway","artificial"))
    (256,std::make_pair("amenity","bus_station"))
    (257,std::make_pair("leisure","golf_course"))
    (258,std::make_pair("shop","doityourself"))
    (259,std::make_pair("building","service"))
    (260,std::make_pair("tourism","guest_house"))
    (261,std::make_pair("aeroway","runway"))
    (262,std::make_pair("place","city"))
    (263,std::make_pair("railway","subway"))
    (264,std::make_pair("man_made","wastewater_plant"))
    (265,std::make_pair("building","commercial"))
    (266,std::make_pair("railway","halt"))
    (267,std::make_pair("amenity","emergency_phone"))
    (268,std::make_pair("building","retail"))
    (269,std::make_pair("barrier","block"))
    (270,std::make_pair("leisure","recreation_ground"))
    (271,std::make_pair("access","forestry"))
    (272,std::make_pair("amenity","college"))
    (273,std::make_pair("highway","platform"))
    (274,std::make_pair("access","unknown"))
    (275,std::make_pair("man_made","water_tower"))
    (276,std::make_pair("surface","pebblestone"))
    (277,std::make_pair("bridge","viaduct"))
    (278,std::make_pair("shop","butcher"))
    (279,std::make_pair("shop","florist"))
    (280,std::make_pair("boundary","landuse"))
    (281,std::make_pair("aeroway","helipad"))
    (282,std::make_pair("building","hangar"))
    (283,std::make_pair("natural","glacier"))
    (284,std::make_pair("highway","proposed"))
    (285,std::make_pair("shop","mall"))
    (286,std::make_pair("barrier","toll_booth"))
    (287,std::make_pair("amenity","fire_hydrant"))
    (288,std::make_pair("building","manufacture"))
    (289,std::make_pair("building","farm"))
    (290,std::make_pair("surface","wood"))
    (291,std::make_pair("amenity","car_wash"))
    (292,std::make_pair("amenity","dentist"))
    (293,std::make_pair("natural","marsh"))
    (294,std::make_pair("man_made","surveillance"))
    (295,std::make_pair("shop","bicycle"))
    (296,std::make_pair("route","foot"))
    (297,std::make_pair("amenity","theatre"))
    (298,std::make_pair("building","office"))
    (299,std::make_pair("railway","light_rail"))
    (300,std::make_pair("man_made","petroleum_well"))
    (301,std::make_pair("amenity","taxi"))
    (302,std::make_pair("building","greenhouse"))
    (303,std::make_pair("landuse","brownfield"))
    (304,std::make_pair("bicycle","permissive"))
    (305,std::make_pair("admin_level","2"))
    (306,std::make_pair("aeroway","apron"))
    (307,std::make_pair("building","cabin"))
    (308,std::make_pair("amenity","cinema"))
    (309,std::make_pair("access","customers"))
    (310,std::make_pair("tourism","motel"))
    (311,std::make_pair("railway","narrow_gauge"))
    (312,std::make_pair("amenity","marketplace"))
    (313,std::make_pair("shop","furniture"))
    (314,std::make_pair("entrance","staircase"))
    (315,std::make_pair("tourism","artwork"))
    (316,std::make_pair("natural","grassland"))
    (317,std::make_pair("shop","books"))
    (318,std::make_pair("admin_level","5"))
    (319,std::make_pair("man_made","groyne"))
    (320,std::make_pair("waterway","lock_gate"))
    (321,std::make_pair("highway","emergency_access_point"))
    (322,std::make_pair("natural","sand"))
    (323,std::make_pair("landuse","military"))
    (324,std::make_pair("boundary","protected_area"))
    (325,std::make_pair("amenity","community_centre"))
    (326,std::make_pair("barrier","kissing_gate"))
    (327,std::make_pair("highway","speed_camera"))
    (328,std::make_pair("boundary","national_park"))
    (329,std::make_pair("railway","subway_entrance"))
    (330,std::make_pair("man_made","silo"))
    (331,std::make_pair("shop","alcohol"))
    (332,std::make_pair("highway","give_way"))
    (333,std::make_pair("leisure","slipway"))
    (334,std::make_pair("shop","electronics"))
    (335,std::make_pair("bicycle","dismount"))
    (336,std::make_pair("leisure","marina"))
    (337,std::make_pair("entrance","main"))
    (338,std::make_pair("boundary","postal_code"))
    (339,std::make_pair("landuse","greenhouse_horticulture"))
    (340,std::make_pair("highway","milestone"))
    (341,std::make_pair("natural","cave_entrance"))
    (342,std::make_pair("landuse","landfill"))
    (343,std::make_pair("shop","chemist"))
    (344,std::make_pair("shop","shoes"))
    (345,std::make_pair("barrier","cattle_grid"))
    (346,std::make_pair("landuse","railway"))
    (347,std::make_pair("tourism","hostel"))
    (348,std::make_pair("tourism","chalet"))
    (349,std::make_pair("place","county"))
    (350,std::make_pair("shop","department_store"))
    (351,std::make_pair("highway","ford"))
    (352,std::make_pair("natural","scree"))
    (353,std::make_pair("landuse","greenfield"))
    (354,std::make_pair("amenity","nursing_home"))
    (355,std::make_pair("barrier","wire_fence"))
    (356,std::make_pair("access","restricted"))
    (357,std::make_pair("man_made","reservoir_covered"))
    (358,std::make_pair("amenity","bicycle_rental"))
    (359,std::make_pair("man_made","MDF"))
    (360,std::make_pair("man_made","water_well"))
    (361,std::make_pair("landuse","field"))
    (362,std::make_pair("landuse","wood"))
    (363,std::make_pair("shop","hardware"))
    (364,std::make_pair("tourism","alpine_hut"))
    (365,std::make_pair("natural","tree_row"))
    (366,std::make_pair("tourism","caravan_site"))
    (367,std::make_pair("bridge","no"))
    (368,std::make_pair("wetland","bog"))
    (369,std::make_pair("amenity","courthouse"))
    (370,std::make_pair("route","ferry"))
    (371,std::make_pair("barrier","city_wall"))
    (372,std::make_pair("amenity","veterinary"))
    (373,std::make_pair("shop","jewelry"))
    (374,std::make_pair("building","transportation"))
    (375,std::make_pair("amenity","arts_centre"))
    (376,std::make_pair("bicycle","official"))
    (377,std::make_pair("shop","optician"))
    (378,std::make_pair("shop","yes"))
    (379,std::make_pair("building","collapsed"))
    (380,std::make_pair("shop","garden_centre"))
    (381,std::make_pair("man_made","chimney"))
    (382,std::make_pair("man_made","mine"))
    (383,std::make_pair("bench","unknown"))
    (384,std::make_pair("railway","preserved"))
    (385,std::make_pair("building","public"))
    (386,std::make_pair("amenity","ferry_terminal"))
    (387,std::make_pair("highway","raceway"))
    (388,std::make_pair("natural","rock"))
    (389,std::make_pair("tunnel","no"))
    (390,std::make_pair("building","university"))
    (391,std::make_pair("shop","beverages"))
    (392,std::make_pair("amenity","waste_disposal"))
    (393,std::make_pair("building","warehouse"))
    (394,std::make_pair("leisure","water_park"))
    (395,std::make_pair("shop","gift"))
    (396,std::make_pair("place","farm"))
    (397,std::make_pair("wetland","tidalflat"))
    (398,std::make_pair("waterway","waterfall"))
    (399,std::make_pair("man_made","dolphin"))
    (400,std::make_pair("service","drive_through"))
    (401,std::make_pair("amenity","nightclub"))
    (402,std::make_pair("building","shed"))
    (403,std::make_pair("shop","greengrocer"))
    (404,std::make_pair("natural","fell"))
    (405,std::make_pair("wetland","wet_meadow"))
    (406,std::make_pair("aeroway","gate"))
    (407,std::make_pair("shop","computer"))
    (408,std::make_pair("man_made","lighthouse"))
    (409,std::make_pair("wetland","reedbed"))
    (410,std::make_pair("man_made","breakwater"))
    (411,std::make_pair("surface","Dirt_Sand"))
    (412,std::make_pair("barrier","ditch"))
    (413,std::make_pair("barrier","yes"))
    (414,std::make_pair("amenity","biergarten"))
    (415,std::make_pair("shop","mobile_phone"))
    (416,std::make_pair("route","mtb"))
    (417,std::make_pair("amenity","grit_bin"))
    (418,std::make_pair("amenity","bbq"))
    (419,std::make_pair("shop","sports"))
    (420,std::make_pair("barrier","wood_fence"))
    (421,std::make_pair("entrance","home"))
    (422,std::make_pair("shop","laundry"))
    (423,std::make_pair("man_made","gasometer"))
    (424,std::make_pair("barrier","embankment"))
    (425,std::make_pair("shop","toys"))
    (426,std::make_pair("wetland","saltmarsh"))
    (427,std::make_pair("waterway","soakhole"))
    (428,std::make_pair("shop","travel_agency"))
    (429,std::make_pair("man_made","water_works"))
    (430,std::make_pair("route","railway"))
    (431,std::make_pair("amenity","prison"))
    (432,std::make_pair("highway","rest_area"))
    (433,std::make_pair("shop","stationery"))
    (434,std::make_pair("admin_level","11"))
    (435,std::make_pair("building","train_station"))
    (436,std::make_pair("building","storage_tank"))
    (437,std::make_pair("man_made","windmill"))
    (438,std::make_pair("shop","beauty"))
    (439,std::make_pair("building","semi"))
    (440,std::make_pair("highway","services"))
    (441,std::make_pair("bicycle","private"))
    (442,std::make_pair("route","ski"))
    (443,std::make_pair("service","emergency_access"))
    (444,std::make_pair("building","factory"))
    (445,std::make_pair("man_made","reinforced_slope"))
    (446,std::make_pair("amenity","car_sharing"))
    (447,std::make_pair("surface","earth"))
    (448,std::make_pair("shop","hifi"))
    (449,std::make_pair("amenity","car_rental"))
    (450,std::make_pair("barrier","hedge_bank"))
    (451,std::make_pair("shop","confectionery"))
    (452,std::make_pair("aeroway","terminal"))
    (453,std::make_pair("highway","passing_place"))
    (454,std::make_pair("building","building"))
    (455,std::make_pair("man_made","dyke"))
    (456,std::make_pair("building","construction"))
    (457,std::make_pair("building","shop"))
    (458,std::make_pair("natural","reef"))
    (459,std::make_pair("landuse","aquaculture"))
    (460,std::make_pair("shop","dry_cleaning"))
    (461,std::make_pair("amenity","embassy"))
    (462,std::make_pair("shop","newsagent"))
    (463,std::make_pair("landuse","salt_pond"))
    (464,std::make_pair("railway","spur"))
    (465,std::make_pair("wheelchair","unknown"))
    (466,std::make_pair("tourism","zoo"))
    (467,std::make_pair("man_made","waterway"))
    (468,std::make_pair("surface","fine_gravel"))
    (469,std::make_pair("shop","motorcycle"))
    (470,std::make_pair("building","Building"))
    (471,std::make_pair("railway","construction"))
    (472,std::make_pair("place","neighbourhood"))
    (473,std::make_pair("route","train"))
    (474,std::make_pair("building","no"))
    (475,std::make_pair("natural","mud"))
    (476,std::make_pair("place","region"))
    (477,std::make_pair("landuse","reservoir_watershed"))
    (478,std::make_pair("boundary","marker"))
    (479,std::make_pair("man_made","beacon"))
    (480,std::make_pair("shop","outdoor"))
    (481,std::make_pair("access","public"))
    (482,std::make_pair("abutters","industrial"))
    (483,std::make_pair("building","barn"))
    (484,std::make_pair("leisure","picnic_table"))
    (485,std::make_pair("building","hospital"))
    (486,std::make_pair("access","official"))
    (487,std::make_pair("shop","variety_store"))
    (488,std::make_pair("man_made","crane"))
    (489,std::make_pair("amenity","parking_fuel"))
    (490,std::make_pair("route","tram"))
    (491,std::make_pair("tourism","theme_park"))
    (492,std::make_pair("shop","pet"))
    (493,std::make_pair("building","kindergarten"))
    (494,std::make_pair("man_made","storage"))
    (495,std::make_pair("man_made","mast"))
    (496,std::make_pair("amenity","parking_entrance"))
    (497,std::make_pair("amenity","clock"))
    (498,std::make_pair("landuse","industrial_retail"))
    (499,std::make_pair("shop","video"))
    (500,std::make_pair("access","delivery"))
    (501,std::make_pair("amenity","driving_school"))
    (502,std::make_pair("service","yes"))
    (503,std::make_pair("natural","bare_rock"))
    (504,std::make_pair("building","chapel"))
    (505,std::make_pair("natural","volcano"))
    (506,std::make_pair("waterway","dock"))
    (507,std::make_pair("building","dormitory"))
    (508,std::make_pair("amenity","boat_storage"))
    (509,std::make_pair("man_made","tank"))
    (510,std::make_pair("man_made","flagpole"))
    (511,std::make_pair("surface","grass_paver"))
    (512,std::make_pair("shop","organic"))
    (513,std::make_pair("natural","landform"))
    (514,std::make_pair("highway","unsurfaced"))
    (515,std::make_pair("route","power"))
    (516,std::make_pair("surface","mud"))
    (517,std::make_pair("building","building_concrete"))
    (518,std::make_pair("abutters","retail"))
    (519,std::make_pair("building","store"))
    (520,std::make_pair("shop","vacant"))
    (521,std::make_pair("leisure","miniature_golf"))
    (522,std::make_pair("man_made","monitoring_station"))
    (523,std::make_pair("natural","waterfall"))
    (524,std::make_pair("aeroway","hangar"))
    (525,std::make_pair("shop","boutique"))
    (526,std::make_pair("route","detour"))
    (527,std::make_pair("building","way"))
    (528,std::make_pair("railway","stop"))
    (529,std::make_pair("amenity","ice_cream"))
    (530,std::make_pair("building","storage"))
    (531,std::make_pair("shop","car_parts"))
    (532,std::make_pair("natural","ridge"))
    (533,std::make_pair("shop","tyres"))
    (534,std::make_pair("railway","dismantled"))
    (535,std::make_pair("amenity","shop"))
    (536,std::make_pair("landuse","plant_nursery"))
    (537,std::make_pair("building","residentiel1"))
    (538,std::make_pair("barrier","field_boundary"))
    (539,std::make_pair("barrier","border_control"))
    (540,std::make_pair("surface","Paved"))
    (541,std::make_pair("barrier","sally_port"))
    (542,std::make_pair("amenity","bureau_de_change"))
    (543,std::make_pair("leisure","fishing"))
    (544,std::make_pair("amenity","charging_station"))
    (545,std::make_pair("building","supermarket"))
    (546,std::make_pair("highway","stile"))
    (547,std::make_pair("amenity","sauna"))
    (548,std::make_pair("place","municipality"))
    (549,std::make_pair("building","hotel"))
    (550,std::make_pair("surface","metal"))
    (551,std::make_pair("highway","incline_steep"))
    (552,std::make_pair("shop","estate_agent"))
    (553,std::make_pair("natural","grass"))
    (554,std::make_pair("shop","pharmacy"))
    (555,std::make_pair("surface","concrete_plates"))
    (556,std::make_pair("shop","copyshop"))
    (557,std::make_pair("surface","paving_stones_30"))
    (558,std::make_pair("surface","interlock"))
    (559,std::make_pair("access","hov"))
    (560,std::make_pair("highway","elevator"))
    ;
/*
    (0,std::make_pair("boundary","local_authority"))
    (0,std::make_pair("man_made","communications_tower"))
    (0,std::make_pair("shop","deli"))
    (0,std::make_pair("barrier","turnstile"))
    (0,std::make_pair("building","offices"))
    (0,std::make_pair("building","bunker"))
    (0,std::make_pair("natural","stone"))
    (0,std::make_pair("railway","railway_crossing"))
    (0,std::make_pair("leisure","dog_park"))
    (0,std::make_pair("building","semi_detached"))
    (0,std::make_pair("man_made","watermill"))
    (0,std::make_pair("route","trolleybus"))
    (0,std::make_pair("admin_level","3"))
    (0,std::make_pair("building","block"))
    (0,std::make_pair("barrier","guard_rail"))
    (0,std::make_pair("bicycle","unknown"))
    (0,std::make_pair("highway","abandoned"))
    (0,std::make_pair("surface","dirt_sand"))
    (0,std::make_pair("barrier","chain"))
    (0,std::make_pair("barrier","bump_gate"))
    (0,std::make_pair("building","residental"))
    (0,std::make_pair("surface","cement"))
    (0,std::make_pair("man_made","embankment"))
    (0,std::make_pair("building","ruins"))
    (0,std::make_pair("highway","incline"))
    (0,std::make_pair("abutters","commercial"))
    (0,std::make_pair("barrier","hampshire_gate"))
    (0,std::make_pair("shop","music"))
    (0,std::make_pair("shop","funeral_directors"))
    (0,std::make_pair("wetland","mangrove"))
    (0,std::make_pair("place","borough"))
    (0,std::make_pair("building","apartment"))
    (0,std::make_pair("boundary","census"))
    (0,std::make_pair("barrier","kerb"))
    (0,std::make_pair("building","glasshouse"))
    (0,std::make_pair("aeroway","holding_position"))
    (0,std::make_pair("shop","general"))
    (0,std::make_pair("building","tank"))
    (0,std::make_pair("railway","monorail"))
    (0,std::make_pair("service","parking"))
    (0,std::make_pair("place","state"))
    (0,std::make_pair("railway","proposed"))
    (0,std::make_pair("shop","art"))
    (0,std::make_pair("natural","hill"))
    (0,std::make_pair("railway","turntable"))
    (0,std::make_pair("tourism","cabin"))
    (0,std::make_pair("shop","photo"))
    (0,std::make_pair("boundary","lot"))
    (0,std::make_pair("shop","fishmonger"))
    (0,std::make_pair("amenity","clinic"))
    (0,std::make_pair("boundary","political"))
    (0,std::make_pair("man_made","well"))
    (0,std::make_pair("highway","byway"))
    (0,std::make_pair("leisure","horse_riding"))
    (0,std::make_pair("service","bus"))
    (0,std::make_pair("building","tower"))
    (0,std::make_pair("entrance","service"))
    (0,std::make_pair("shop","fabric"))
    (0,std::make_pair("railway","miniature"))
    (0,std::make_pair("abutters","mixed"))
    (0,std::make_pair("surface","stone"))
    (0,std::make_pair("access","emergency"))
    (0,std::make_pair("landuse","mine"))
    (0,std::make_pair("amenity","shower"))
    (0,std::make_pair("waterway","lock"))
    (0,std::make_pair("area","yes"))
    ;
*/

boost::optional<tag_type> tag_from_name(name_type const& name)
{
    boost::optional<tag_type> tag;
    tag_lookup_type::right_const_iterator right_iter = tag_lookup.right.find(name);
    if (right_iter != tag_lookup.right.end())
    {
        tag.reset(right_iter->second);
    }
    return tag;
}

boost::optional<tag_type> tag_index_from_kv(name_type const& key, std::string const& val)
{
    boost::optional<tag_type> tag;
    tag_value_lookup_type::right_const_iterator right_iter = tag_value_lookup.right.find(std::make_pair(key,val));
    if (right_iter != tag_value_lookup.right.end())
    {
        tag.reset(right_iter->second);
    }
    else
    {
        tag_lookup_type::right_const_iterator right_iter = tag_lookup.right.find(key);
        if (right_iter != tag_lookup.right.end())
        {
            tag.reset(1024 + right_iter->second);
        }
    }
    return tag;
}

boost::optional<std::pair<std::string,std::string> > kv_from_tag(tag_type tag)
{
    boost::optional<std::pair<std::string,std::string> > kv;
    tag_value_lookup_type::left_const_iterator left_iter = tag_value_lookup.left.find(tag);
    if (left_iter !=  tag_value_lookup.left.end())
    {
        kv.reset(left_iter->second);
    }
    return kv;
}

}}
